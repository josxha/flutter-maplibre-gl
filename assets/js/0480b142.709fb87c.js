"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[70],{2453:(e,i,r)=>{r.r(i),r.d(i,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>n,metadata:()=>a,toc:()=>d});var s=r(4848),t=r(8453);const n={sidebar_position:5},o="FAQ",a={id:"faq",title:"FAQ",description:"Loading .mbtiles tile files or sprites/glyphs from the assets shipped with the app",source:"@site/docs/faq.md",sourceDirName:".",slug:"/faq",permalink:"/flutter-maplibre-gl/docs/faq",draft:!1,unlisted:!1,editUrl:"https://github.com/josxha/flutter-maplibre-gl/tree/main/docs/docs/faq.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"docsSidebar",previous:{title:"Supported Features",permalink:"/flutter-maplibre-gl/docs/features/supported-features"}},l={},d=[{value:"Loading .mbtiles tile files or sprites/glyphs from the assets shipped with the app",id:"loading-mbtiles-tile-files-or-spritesglyphs-from-the-assets-shipped-with-the-app",level:3},{value:"Avoid Android UnsatisfiedLinkError",id:"avoid-android-unsatisfiedlinkerror",level:3},{value:"Layer is not displayed on IOS, but no error",id:"layer-is-not-displayed-on-ios-but-no-error",level:3},{value:"iOS crashes with error: <code>&#39;NSInvalidArgumentException&#39;, reason: &#39;Invalid filter value: filter property must be a string&#39;</code>",id:"ios-crashes-with-error-nsinvalidargumentexception-reason-invalid-filter-value-filter-property-must-be-a-string",level:3}];function p(e){const i={a:"a",code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.h1,{id:"faq",children:"FAQ"}),"\n",(0,s.jsx)(i.h3,{id:"loading-mbtiles-tile-files-or-spritesglyphs-from-the-assets-shipped-with-the-app",children:"Loading .mbtiles tile files or sprites/glyphs from the assets shipped with the app"}),"\n",(0,s.jsxs)(i.p,{children:["One approach that has been used successfully to do that is to copy the files\nfrom the app's assets directory to another directory, e.g. the app's cache\ndirectory, and then reference that location.\nSee e.g. issues ",(0,s.jsx)(i.a,{href:"https://github.com/maplibre/flutter-maplibre-gl/issues/338",children:"https://github.com/maplibre/flutter-maplibre-gl/issues/338"}),"\nand ",(0,s.jsx)(i.a,{href:"https://github.com/maplibre/flutter-maplibre-gl/issues/318",children:"https://github.com/maplibre/flutter-maplibre-gl/issues/318"})]}),"\n",(0,s.jsx)(i.h3,{id:"avoid-android-unsatisfiedlinkerror",children:"Avoid Android UnsatisfiedLinkError"}),"\n",(0,s.jsxs)(i.p,{children:["Update buildTypes in ",(0,s.jsx)(i.code,{children:"android\\app\\build.gradle"})]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-gradle",metastring:'title="android\\app\\build.gradle"',children:"buildTypes {\n    release {\n        // other configs\n        ndk {\n            abiFilters 'armeabi-v7a','arm64-v8a','x86_64', 'x86'\n        }\n    }\n}\n"})}),"\n",(0,s.jsx)(i.h3,{id:"layer-is-not-displayed-on-ios-but-no-error",children:"Layer is not displayed on IOS, but no error"}),"\n",(0,s.jsxs)(i.p,{children:["Have a look in your ",(0,s.jsx)(i.code,{children:"LayerProperties"})," object, if you supply a ",(0,s.jsx)(i.code,{children:"lineColor"}),"\nargument, (or any color argument) the issue might come from here.\nAndroid supports the following format : ",(0,s.jsx)(i.code,{children:"'rgba(192, 192, 255, 1.0)'"}),", but on\niOS, this doesn't work!"]}),"\n",(0,s.jsxs)(i.p,{children:["You have to have the color in the following format : ",(0,s.jsx)(i.code,{children:"#C0C0FF"})]}),"\n",(0,s.jsxs)(i.h3,{id:"ios-crashes-with-error-nsinvalidargumentexception-reason-invalid-filter-value-filter-property-must-be-a-string",children:["iOS crashes with error: ",(0,s.jsx)(i.code,{children:"'NSInvalidArgumentException', reason: 'Invalid filter value: filter property must be a string'"})]}),"\n",(0,s.jsxs)(i.p,{children:["Check if one of your expression is : ",(0,s.jsx)(i.code,{children:'["!has", "value"]'}),". Android support this\nformat, but iOS does not.\nYou can replace your expression with :   ",(0,s.jsx)(i.code,{children:'["!",["has", "value"] ]'})," which works\nboth in Android and iOS."]}),"\n",(0,s.jsxs)(i.p,{children:["Note : iOS will display the\nerror : ",(0,s.jsx)(i.code,{children:"NSPredicate: Use of 'mgl_does:have:' as an NSExpression function is forbidden"}),",\nbut it seems like the expression still works well."]})]})}function h(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},8453:(e,i,r)=>{r.d(i,{R:()=>o,x:()=>a});var s=r(6540);const t={},n=s.createContext(t);function o(e){const i=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(n.Provider,{value:i},e.children)}}}]);